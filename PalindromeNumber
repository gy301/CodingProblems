/*
Given an integer x, return true if x is palindrome integer.

An integer is a palindrome when it reads the same backward as forward. For example, 121 is palindrome while 123 is not.

 

Example 1:

Input: x = 121
Output: true
Example 2:

Input: x = -121
Output: false
Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.
Example 3:

Input: x = 10
Output: false
Explanation: Reads 01 from right to left. Therefore it is not a palindrome.
Example 4:

Input: x = -101
Output: false
 

Constraints:

-231 <= x <= 231 - 1
*/
public class Solution {
    public bool IsPalindrome(int x) {
         string s=x.ToString();
         int ret = isPalindrome(s);
        if (ret ==1)
            return true;
        return false;

        
        
        
    }
    
    public int isPalindrome(string s)
    {
        int sLen = s.Length;
        
        int isPal = 1;
       
        for (int i=0;i<sLen;i++)
        {
            if (i<sLen-1-i)
            {
                if (s.Substring(i,1) == s.Substring(sLen-1-i,1))
            {
                
                isPal=1;
            }
            else 
            {
            
                return 0;
            }
            }
        }
        return isPal;
