public class Solution {
    public int Divide(int dividend, int divisor) {
        
        //Numerator and Denomininator both postive or numerator and both demoniator negative - Yes
        //Only one of Numerator or Denominator is postive - Yes
        //Denominoator is 1 or -1 - Yes
        //Numerator = denominator - Yes
       
        //dividend and divisor are the same
        if (dividend==divisor)
            return 1;
        
        //dividend and divisor add up to 0
        if (dividend+divisor==0)
            return -1;
        
        //Denominator = -1
        if (divisor== -1)
            return (divisor-dividend);
        
        //Denominator = 1
        if (divisor==1)
            return dividend;
        
        
        int quotient=0;
        long reminder=dividend;
        
        //Dividend and divisor are both >0 
        if ( (dividend>0 && divisor>0) ) 
        {
             
             Console.WriteLine(reminder);
            
            while(reminder>=divisor)
            {
                reminder= (reminder-divisor);
                quotient++;
                
            }
            return quotient;
        }
        
       //  Dividend and divisor are both <0
        if ( (dividend<0 && divisor<0)) 
        {
                        
          
            while(reminder<=divisor)
            {
                reminder= (reminder-divisor);
                quotient++;
                
            }
            return quotient;
        }
        
            //Numerator is <0 and Denominator >0
            if ((dividend < 0 && divisor > 0))
            {

                quotient = 0;
                //if denominator > numerator
                if (divisor + reminder > 0)
                    return 0;

                while (reminder < 0 && divisor + reminder <= 0)
                {
                    reminder = (reminder + divisor);
                    quotient--;
                }
                return quotient;
            }
      
        
            //Numerator > 0 and denomintor <0
            if ( (dividend > 0 && divisor < 0))
            {

                quotient = 0;
                //denominator > numerator
                if (divisor + reminder < 0)
                    return 0;

                while (reminder > 0 && divisor + reminder >= 0)
                {
                    reminder = (reminder + divisor);
                    quotient--;
                }
                return quotient;
            }
            return quotient;
        
        
    }
}
